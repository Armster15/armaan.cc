---
import { Image } from "astro:assets";
import Socials from "./Socials.astro";
import Links from "./Links.astro";

import ProfilePicture from "$/../public/casual-pfp.jpg";
---

<nav
  id="desktop-navbar"
  class:list={[
    "mt-4 hidden border-[0.5px] border-[#f0ede6] shadow-sm sm:flex lg:mt-8",
    "sticky inset-x-0 top-2 z-10 w-full max-w-4xl rounded-full py-4 pl-4 pr-6 backdrop-blur-md transition-shadow duration-100 *:flex-1",
  ]}
>
  {/* Icon + "armaan" */}
  <a href="/" class="flex items-center gap-2">
    <Image
      src={ProfilePicture}
      alt={""}
      class="w-[3.5ch] shrink-0 rounded-full"
      aria-hidden="true"
      width={300}
      loading="eager"
    />

    <header class="text-xl font-semibold lowercase leading-[30px]">
      <span>Armaan</span>
      <span class="sr-only lg:not-sr-only">Aggarwal</span>
    </header>
  </a>

  <Links />

  <Socials />
</nav>

<style>
  nav[data-at-top] {
    border-color: transparent;

    /* Open Props: --inner-shadow-2 */
    box-shadow:
      rgba(37, 38, 39, 0.1) 0px 1px 4px 0px inset,
      rgb(255, 255, 255) 0px -0.5px 0px 0px inset,
      rgba(0, 0, 0, 0.067) 0px 0.5px 0px 0px inset;
  }
</style>

{/* Adds/removes data-at-top attr from navbar if navbar touches top of viewport */}
<script>
  function main() {
    const navbar = document.getElementById("desktop-navbar")!;

    const topValue = window.getComputedStyle(navbar).top; // e.g. "8px"
    const topInPixels = parseInt(topValue, 10);

    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.intersectionRatio < 1) {
          // Navbar is touching the top (partially out of view)
          navbar.setAttribute("data-at-top", "");
        } else {
          // Navbar is fully in view
          navbar.removeAttribute("data-at-top");
        }
      },
      {
        threshold: [1.0],
        // This root margin creates a virtual margin above the viewport
        // to detect when navbar approaches the top.
        // The "+ 1" is to ensure the intersection ratio is < 1
        rootMargin: `-${topInPixels + 1}px 0px 0px 0px`,
      },
    );

    observer.observe(navbar);
  }

  main();

  // Reapply listener after client side nav occurs
  document.addEventListener("astro:after-swap", () => {
    main();
  });
</script>
