---
import { Image, type LocalImageProps } from "astro:assets";
import type { HTMLAttributes } from "astro/types";
import { Icon } from "astro-icon/components";

interface Props {
  title: string;
  role?: string;
  description: string;
  imgSrc: LocalImageProps["src"];
  imgBgClass: string;
  imgClass?: string;
  imgLoading?: LocalImageProps["loading"];
  href: string;
  tags?: string[];
  headingType: "h1" | "h2" | "h3" | "h4" | "h5" | "h5";
  target?: HTMLAttributes<"a">["target"];
}

const {
  title,
  description,
  imgSrc,
  imgBgClass,
  imgClass,
  imgLoading,
  href,
  tags,
  headingType: Heading,
  role,
  target = "_blank",
} = Astro.props;

const TAG_CLASS_MAP = [
  "bg-gray-100 text-gray-800",
  "bg-blue-100 text-blue-800",
  "bg-indigo-100 text-indigo-800",
  "bg-green-100 text-green-800",
];
---

<a
  href={href}
  target={target}
  class="group flex h-full flex-col rounded-2xl bg-white/50 shadow duration-200 hover:shadow-lg focus:shadow-lg active:shadow-lg sm:flex-row"
>
  <div
    class:list={[
      "flex items-center justify-center p-4 max-sm:rounded-t-2xl sm:rounded-l-2xl",
      imgBgClass,
    ]}
  >
    <Image
      src={imgSrc}
      loading={imgLoading}
      alt=""
      width="256"
      class:list={[
        "w-16 rounded-2xl shadow duration-150",
        "group-hover:-rotate-2 group-focus:-rotate-2 group-active:-rotate-2",
        "group-hover:scale-[1.03] group-focus:scale-[1.03] group-active:scale-[1.03]",
        imgClass,
      ]}
    />
  </div>

  <div class="flex flex-1 flex-col justify-between p-4">
    <div>
      <div class="*:inline-block *:w-fit">
        <Heading class="break-all text-lg font-medium">
          <span>{title}</span>
          <Icon
            class="inline -rotate-45 text-subtitle-light duration-200 group-hover:text-subtitle group-focus:text-subtitle group-active:text-subtitle sm:hidden"
            name="ion:arrow-forward"
            width="20"
            aria-hidden="true"
          />
        </Heading>

        {/* Role on desktop */}
        {role && <p class="text-base italic text-subtitle max-sm:hidden">â€” {role}</p>}
      </div>

      {/* Role on mobile */}
      {role && <p class="mb-2 text-sm italic text-subtitle sm:hidden">{role}</p>}

      {
        /* Using <pre> so you can pass "\n" to description strings and have that rendered as line breaks */
      }
      <pre
        class="whitespace-pre-wrap font-[inherit] text-sm font-normal leading-6 text-subtitle">{description}</pre>
    </div>

    {
      tags && (
        <div class="mt-4 gap-6 sm:mt-2">
          {tags.map((tag, index) => (
            <span
              class:list={[
                "mr-2 inline-flex rounded  px-2 py-0.5 text-xs font-medium",
                TAG_CLASS_MAP[index],
              ]}
            >
              {tag}
            </span>
          ))}
        </div>
      )
    }
  </div>

  <div class="hidden items-center justify-center px-4 sm:flex">
    <Icon
      class:list={[
        "-rotate-45 text-subtitle-light duration-200",
        "group-hover:-translate-y-[1px] group-focus:-translate-y-[1px] group-active:-translate-y-[1px]",
        "group-hover:translate-x-[1px] group-focus:translate-x-[1px] group-active:translate-x-[1px]",
        "group-hover:text-subtitle group-focus:text-subtitle group-active:text-subtitle",
      ]}
      name="ion:arrow-forward"
      width="20"
      aria-hidden="true"
    />
  </div>
</a>
